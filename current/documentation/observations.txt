PROBLEMES CONNUS:

1) la fonction intersection_polygones a le bon comportement general, mais le test semble trop approximatif
il y a des cas où la fonction detecte une collision alors qu'il n'y a rien sur l'affichage
ce problème survient surtout au démarrage de la simulation et avec un grand nombre d'obstacle
Map builder semble aussi laisser passer des obstacles qui chevauchent le robot, donc on peut avoir dès le debut
un obstacle sur le robot, même si ce cas est plus rare

vu la rareté de ces évènements, il se peut que l'algorithme ne gère pas certains cas particuliers
on devra sans doute passer par un autre algorithme


2) l'implementation de get distance qui retourne le nombre de pas avant collision sur un obstacle est également 
difficile on a toute les fonctions pour l'implementer, mais le soucis c'est que en travaillant sur seulement 
1 point, on travaillera au final sur une ligne et on sera bien trop imprécis vu la largeur du capteur, qui est 
un triangle

concrètement on aura des résultats satisfaisants que si l'obstacle détecté est droit devant le robot

la première implementation retournait le plus souvent soit max range soit 0, avec rarement d'entre-deux, ce qui est 
problématique, mais vu l'importance moindre de cette fonction face aux autres problèmes, on enlève cette fonction en 
attendant qu'une solution soit trouvée

3) l'ordre des instructions dans init_sim doivent suivre un ordre précis, on ne peut pas déclarer les éléments n'importe où,
par exemple goal_strat doit être créer après le superviseur (ou en même temps) et après que mapbuilder ait finit de build le monde.
De manière générale le code est peu flexible

4) Le code actuel (à date du 18/03) ne convient pas encore au robot réel,
on doit donc adapter le code (plus particulièrement la partie superviseur - strategies) pour coller au code du robot réel, 
notamment au niveau des unités

5) problemes au niveau des unites, on obtient des vitesses impossibles vu les dimensions du robot (dans nos unites), on doit trouver
les bonnes unités et convertir en fonction
